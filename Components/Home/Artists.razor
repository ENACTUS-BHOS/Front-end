@inject IHttpClientFactory httpClientFactory

<div class="artists">
    <h2>Sənətkarlarımızı tanıyaq</h2>

    <div class="artists-cards">
        <div class="image-galery slider" style="--count:@Count;
        --half-count:@HalfCount">
            <div class="slide-track">
                @foreach(var artist in AllArtists)
                {
                    <ArtistCard Name="@artist.Name" Major="@artist.Major" ImageUrl="@artist.ImageUrl"
                    Information="@artist.Description" InstagramUrl="@artist.InstagramUrl" FacebookUrl="@artist.FacebookUrl" PhoneNumber="@artist.PhoneNumber"/>
                }
            </div>
        </div>
    </div>
</div>

<style>
    @@keyframes scroll {
        0% {
            transform: translateX(0);
        }

        100% {
            transform: translateX(calc(-932px * var(--count)))
        }
    }

    .slider {
        overflow: hidden;
        position: relative;
        width: 100%;
    }

    .slide-track {
        animation: scroll 50s linear infinite;
        animation-delay: 1s;
        display: flex;
        width: calc(932px * var(--count));
    }

    .slide-track:hover {
        animation-play-state: paused;
    }
</style>

@code {
    public string? Count { get; set; } = "15";
    public string? HalfCount { get; set; } = "7.5";

    public IEnumerable<Artist> AllArtists { get; set; } = new List<Artist>() { };

    protected override async Task OnInitializedAsync()
    {
        var httpClient = httpClientFactory.CreateClient("Miras");

        var response = await httpClient.GetAsync($"api/Artists/GetAll");

        var content = await response.Content.ReadAsStringAsync();

        if (!response.IsSuccessStatusCode)
        {
            throw new ApplicationException(content);
        }

        AllArtists = JsonConvert.DeserializeObject<List<Artist>>(content);

        Count = AllArtists.Count().ToString();

        HalfCount = (AllArtists.Count() / 2).ToString();
    }
}