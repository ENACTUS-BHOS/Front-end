@inject IHttpClientFactory httpClientFactory

<div class="artists">
    <h2>KomandamÄ±z</h2>

    <div class="artists-cards">
        <div class="image-galery slider" style="--count:@Count;
        --half-count:@HalfCount">
            <div class="slide-track">
                @foreach(var member in members)
                {
                    <ArtistCard Name="@member.Name" Major="@member.Role" ImageUrl="@member.ImageUrl"
                    Information="@member.Bio" />
                }
            </div>
        </div>
    </div>
</div>

<style>
    @@keyframes scroll {
        0% {
            transform: translateX(0);
        }

        100% {
            transform: translateX(calc(-932px * var(--count)))
        }
    }

    .slider {
        overflow: hidden;
        position: relative;
        width: 100%;
    }

    .slide-track {
        animation: scroll 50s linear infinite;
        animation-delay: 1s;
        display: flex;
        width: calc(932px * var(--count));
    }

    .slide-track:hover {
        animation-play-state: paused;
    }
</style>

@code {
    public string? Count { get; set; } = "12";
    public string? HalfCount { get; set; } = "6";

    public IEnumerable<Front_end.Models.Team> members { get; set; } = new List<Front_end.Models.Team>() { };

    protected override async Task OnInitializedAsync()
    {
        var httpClient = httpClientFactory.CreateClient("Miras");

        var response = await httpClient.GetAsync($"api/Team/GetAll");

        var content = await response.Content.ReadAsStringAsync();

        if (!response.IsSuccessStatusCode)
        {
            throw new ApplicationException(content);
        }

        members = JsonConvert.DeserializeObject<List<Front_end.Models.Team>>(content);

        Count = members.Count().ToString();

        HalfCount = (members.Count() / 2).ToString();
    }
}