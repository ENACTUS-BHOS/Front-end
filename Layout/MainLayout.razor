@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject IJSRuntime JS

<div class="page">
    <main>
        <ErrorBoundary>
            <ChildContent>
                <div class="top-row px-4">
                    @if (this.navigationManager.BaseUri == this.navigationManager.Uri)
                    {
                        <label class="hamburger-menu">
                            <input type="checkbox" />
                        </label>
                        
                        <a class="logo" href="/">
                            <img src="/Images/logo.png"/>
                        </a>
                    
                        <div class="navigation-container">
                            <a class="navigation-link" href="/">@Resources.homePage</a>

                            <a class="navigation-link" href="/Works">@Resources.worksPage</a>

                            <a class="navigation-link" href="/Tutorials">@Resources.tutorialsPage</a>

                            <a class="navigation-link" href="/Exhibitions">@Resources.exhibitionsPage</a>

                            <a class="navigation-link" href="/AboutUs">@Resources.aboutUsPage</a>

                            <div class="lang-menu">
                                <div class="selected-lang navigation-link">
                                    <img src="/Images/@(currentLanguage).png"/>@currentLanguage
                                </div>
                                <ul>
                                    <li @onclick="@(async () => { await SelectLanguageAsync("Eng"); })">
                                        <img src="/Images/Eng.png"/>English
                                    </li>

                                    <li @onclick="@(async () => { await SelectLanguageAsync("Aze"); })">
                                        <img src="/Images/Aze.png"/>Azərbaycan
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }
                    else
                    {
                    <label class="hamburger-menu hamburger-menu-dark">
                        <input type="checkbox" />
                    </label>

                    <a class="logo" href="/">
                        <img src="/Images/dark-logo.png"/>
                    </a>
                        
                        <input style="display: none;" id="hamburger-menu-button" type="checkbox" >

                        <div class="navigation-container">
                            <a style="color: #60480b" class="navigation-link" href="/">@Resources.homePage</a>

                            <a style="color: #60480b" class="navigation-link" href="/Works">@Resources.worksPage</a>

                            <a style="color: #60480b" class="navigation-link" href="/Tutorials">@Resources.tutorialsPage</a>

                            <a style="color: #60480b" class="navigation-link" href="/Exhibitions">@Resources.exhibitionsPage</a>

                            <a style="color: #60480b" class="navigation-link" href="/AboutUs">@Resources.aboutUsPage</a>

                            <div class="lang-menu">
                                <div class="selected-lang dark navigation-link">
                                    <img src="/Images/@(currentLanguage).png"/>@currentLanguage
                                </div>
                                <ul>
                                    <li @onclick="@(async () => { await SelectLanguageAsync("Eng"); })">
                                        <img src="/Images/Eng.png"/>English
                                    </li>

                                    <li @onclick="@(async () => { await SelectLanguageAsync("Aze"); })">
                                        <img src="/Images/Aze.png"/>Azərbaycan
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }
                </div>
                <article class="content px-4">
                    @Body
                </article>
            </ChildContent>
            <ErrorContent>
                <article class="content px-4">

                    <ServerError></ServerError>
                </article>
            </ErrorContent>
        </ErrorBoundary>
    </main>
</div>

@code {
    private string currentLanguage = "Aze";

    private CultureInfo? selectedCulture;

    protected override async Task OnInitializedAsync()
    {
        selectedCulture = CultureInfo.CurrentCulture;

        currentLanguage = selectedCulture.Name == "az-AZ" ? "Aze" : "Eng";
    }

    private async Task SelectLanguageAsync(string language)
    {
        currentLanguage = language;

        var culture = language == "Eng" ? "en-EN" : "az-AZ";

        selectedCulture = CultureInfo.GetCultureInfo(culture);

        if (true)
        {
            await JS.InvokeVoidAsync("blazorCulture.set", selectedCulture!.Name);

            navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
        }
    }

}