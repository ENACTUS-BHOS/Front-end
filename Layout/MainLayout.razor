@using System.Resources
@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorageService
@inject NavigationManager navigationManager

<div class="page">
    <main>
        <div class="top-row px-4">
            @if (this.navigationManager.BaseUri == this.navigationManager.Uri)
            {
                <a class="logo" href="/">
                    <img src="/Images/logo.png"/>
                </a>

                <div class="navigation-container">
                    <a class="navigation-link" href="/">@Resources.homePage</a>

                    <a class="navigation-link" href="/Works">@Resources.worksPage</a>

                    <a class="navigation-link" href="/Tutorials">@Resources.tutorialsPage</a>

                    <a class="navigation-link" href="/Exhibitions">@Resources.exhibitionsPage</a>

                    <a class="navigation-link" href="/AboutUs">@Resources.aboutUsPage</a>

                    <div class="lang-menu">
                        <div class="selected-lang navigation-link">
                            <img src="/Images/@(currentLanguage).png"/>@currentLanguage
                        </div>
                        <ul>
                            <li @onclick="@(async () => { await SelectLanguageAsync("Eng"); })">
                                <img src="/Images/Eng.png"/>English
                            </li>

                            <li @onclick="@(async () => { await SelectLanguageAsync("Aze"); })">
                                <img src="/Images/Aze.png"/>Azərbaycan
                            </li>
                        </ul>
                    </div>
                </div>
            }
            else
            {
                <a class="logo" href="/">
                    <img src="/Images/dark-logo.png"/>
                </a>

                <div class="navigation-container">
                    <a style="color: #60480b" class="navigation-link" href="/">@Resources.homePage</a>

                    <a style="color: #60480b" class="navigation-link" href="/Works">@Resources.worksPage</a>

                    <a style="color: #60480b" class="navigation-link" href="/Tutorials">@Resources.tutorialsPage</a>

                    <a style="color: #60480b" class="navigation-link" href="/Exhibitions">@Resources.exhibitionsPage</a>

                    <a style="color: #60480b" class="navigation-link" href="/AboutUs">@Resources.aboutUsPage</a>

                    <div class="lang-menu">
                        <div class="selected-lang dark navigation-link">
                            <img src="/Images/@(currentLanguage).png"/>@currentLanguage
                        </div>
                        <ul>
                            <li @onclick="@(async () => { await SelectLanguageAsync("Eng"); })">
                                <img src="/Images/Eng.png"/>English
                            </li>

                            <li @onclick="@(async () => { await SelectLanguageAsync("Aze"); })">
                                <img src="/Images/Aze.png"/>Azərbaycan
                            </li>
                        </ul>
                    </div>
                </div>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private string currentLanguage = "Aze";
    
    protected override async Task OnInitializedAsync()
    {
        var currentCulture = await LocalStorageService.GetItemAsync<string>("currentCulture");

        currentLanguage = currentCulture == "az-AZ" ? "Aze" : "Eng";
        
        CultureInfo.DefaultThreadCurrentCulture = CultureInfo.GetCultureInfo(currentCulture ?? "az-AZ");
        
        CultureInfo.DefaultThreadCurrentUICulture = CultureInfo.GetCultureInfo(currentCulture ?? "az-AZ");
    }

    private async Task SelectLanguageAsync(string language)
    {
        currentLanguage = language;

        var culture = language == "Eng" ? "en-EN" : "az-AZ";

        CultureInfo.DefaultThreadCurrentCulture = CultureInfo.GetCultureInfo(culture);
        
        CultureInfo.DefaultThreadCurrentUICulture = CultureInfo.GetCultureInfo(culture);

        await this.LocalStorageService.SetItemAsStringAsync("currentCulture", culture);
        
        this.navigationManager.NavigateTo(this.navigationManager.Uri, true);
    }
}